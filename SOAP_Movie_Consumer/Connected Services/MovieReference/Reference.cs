//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOAP_Movie_Consumer.MovieReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/SOAP_WCF_U_DB")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titel {
            get {
                return this.TitelField;
            }
            set {
                if ((object.ReferenceEquals(this.TitelField, value) != true)) {
                    this.TitelField = value;
                    this.RaisePropertyChanged("Titel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMovie", ReplyAction="http://tempuri.org/IService1/GetMovieResponse")]
        SOAP_Movie_Consumer.MovieReference.Movie[] GetMovie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMovie", ReplyAction="http://tempuri.org/IService1/GetMovieResponse")]
        System.Threading.Tasks.Task<SOAP_Movie_Consumer.MovieReference.Movie[]> GetMovieAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMovie", ReplyAction="http://tempuri.org/IService1/AddMovieResponse")]
        void AddMovie(SOAP_Movie_Consumer.MovieReference.Movie newFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMovie", ReplyAction="http://tempuri.org/IService1/AddMovieResponse")]
        System.Threading.Tasks.Task AddMovieAsync(SOAP_Movie_Consumer.MovieReference.Movie newFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMovie", ReplyAction="http://tempuri.org/IService1/DeleteMovieResponse")]
        void DeleteMovie(SOAP_Movie_Consumer.MovieReference.Movie deleteFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMovie", ReplyAction="http://tempuri.org/IService1/DeleteMovieResponse")]
        System.Threading.Tasks.Task DeleteMovieAsync(SOAP_Movie_Consumer.MovieReference.Movie deleteFilm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMovie", ReplyAction="http://tempuri.org/IService1/UpdateMovieResponse")]
        void UpdateMovie(int id, SOAP_Movie_Consumer.MovieReference.Movie film);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMovie", ReplyAction="http://tempuri.org/IService1/UpdateMovieResponse")]
        System.Threading.Tasks.Task UpdateMovieAsync(int id, SOAP_Movie_Consumer.MovieReference.Movie film);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SOAP_Movie_Consumer.MovieReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SOAP_Movie_Consumer.MovieReference.IService1>, SOAP_Movie_Consumer.MovieReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SOAP_Movie_Consumer.MovieReference.Movie[] GetMovie() {
            return base.Channel.GetMovie();
        }
        
        public System.Threading.Tasks.Task<SOAP_Movie_Consumer.MovieReference.Movie[]> GetMovieAsync() {
            return base.Channel.GetMovieAsync();
        }
        
        public void AddMovie(SOAP_Movie_Consumer.MovieReference.Movie newFilm) {
            base.Channel.AddMovie(newFilm);
        }
        
        public System.Threading.Tasks.Task AddMovieAsync(SOAP_Movie_Consumer.MovieReference.Movie newFilm) {
            return base.Channel.AddMovieAsync(newFilm);
        }
        
        public void DeleteMovie(SOAP_Movie_Consumer.MovieReference.Movie deleteFilm) {
            base.Channel.DeleteMovie(deleteFilm);
        }
        
        public System.Threading.Tasks.Task DeleteMovieAsync(SOAP_Movie_Consumer.MovieReference.Movie deleteFilm) {
            return base.Channel.DeleteMovieAsync(deleteFilm);
        }
        
        public void UpdateMovie(int id, SOAP_Movie_Consumer.MovieReference.Movie film) {
            base.Channel.UpdateMovie(id, film);
        }
        
        public System.Threading.Tasks.Task UpdateMovieAsync(int id, SOAP_Movie_Consumer.MovieReference.Movie film) {
            return base.Channel.UpdateMovieAsync(id, film);
        }
    }
}
